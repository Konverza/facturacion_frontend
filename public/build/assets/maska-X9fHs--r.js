var P=Object.defineProperty,T=(a,t,e)=>t in a?P(a,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):a[t]=e,A=(a,t,e)=>T(a,typeof t!="symbol"?t+"":t,e);const M={"#":{pattern:/[0-9]/},"@":{pattern:/[a-zA-Z]/},"*":{pattern:/[a-zA-Z0-9]/}},N=(a,t,e)=>a.replaceAll(t,"").replace(e,".").replace("..",".").replace(/[^.\d]/g,""),I=(a,t,e)=>{var s;return new Intl.NumberFormat(((s=e.number)==null?void 0:s.locale)??"en",{minimumFractionDigits:a,maximumFractionDigits:t,roundingMode:"trunc"})},O=(a,t=!0,e)=>{var s,n,r,h;const u=((s=e.number)==null?void 0:s.unsigned)==null&&a.startsWith("-")?"-":"",l=((n=e.number)==null?void 0:n.fraction)??0;let o=I(0,l,e);const k=o.formatToParts(1000.12),c=((r=k.find(i=>i.type==="group"))==null?void 0:r.value)??" ",y=((h=k.find(i=>i.type==="decimal"))==null?void 0:h.value)??".",g=N(a,c,y);if(g===""||Number.isNaN(g))return u;const f=g.split(".");if(f[1]!=null&&f[1].length>=1){const i=f[1].length<=l?f[1].length:l;o=I(i,l,e)}let m=o.format(parseFloat(g));return t?l>0&&g.endsWith(".")&&!g.slice(0,-1).includes(".")&&(m+=y):m=N(m,c,y),u+m};class W{constructor(t={}){A(this,"opts",{}),A(this,"memo",new Map);const e={...t};if(e.tokens!=null){e.tokens=e.tokensReplace?{...e.tokens}:{...M,...e.tokens};for(const s of Object.values(e.tokens))typeof s.pattern=="string"&&(s.pattern=new RegExp(s.pattern))}else e.tokens=M;Array.isArray(e.mask)&&(e.mask.length>1?e.mask=[...e.mask].sort((s,n)=>s.length-n.length):e.mask=e.mask[0]??""),e.mask===""&&(e.mask=null),this.opts=e}masked(t){return this.process(t,this.findMask(t))}unmasked(t){return this.process(t,this.findMask(t),!1)}isEager(){return this.opts.eager===!0}isReversed(){return this.opts.reversed===!0}completed(t){const e=this.findMask(t);if(this.opts.mask==null||e==null)return!1;const s=this.process(t,e).length;return typeof this.opts.mask=="string"?s>=this.opts.mask.length:s>=e.length}findMask(t){const e=this.opts.mask;if(e==null)return null;if(typeof e=="string")return e;if(typeof e=="function")return e(t);const s=this.process(t,e.slice(-1).pop()??"",!1);return e.find(n=>this.process(t,n,!1).length>=s.length)??""}escapeMask(t){const e=[],s=[];return t.split("").forEach((n,r)=>{n==="!"&&t[r-1]!=="!"?s.push(r-s.length):e.push(n)}),{mask:e.join(""),escaped:s}}process(t,e,s=!0){if(this.opts.number!=null)return O(t,s,this.opts);if(e==null)return t;const n=`v=${t},mr=${e},m=${s?1:0}`;if(this.memo.has(n))return this.memo.get(n);const{mask:r,escaped:h}=this.escapeMask(e),u=[],l=this.opts.tokens!=null?this.opts.tokens:{},o=this.isReversed()?-1:1,k=this.isReversed()?"unshift":"push",c=this.isReversed()?0:r.length-1,y=this.isReversed()?()=>i>-1&&p>-1:()=>i<r.length&&p<t.length,g=v=>!this.isReversed()&&v<=c||this.isReversed()&&v>=c;let f,m=-1,i=this.isReversed()?r.length-1:0,p=this.isReversed()?t.length-1:0,R=!1;for(;y();){const v=r.charAt(i),d=l[v],E=(d==null?void 0:d.transform)!=null?d.transform(t.charAt(p)):t.charAt(p);if(!h.includes(i)&&d!=null?(E.match(d.pattern)!=null?(u[k](E),d.repeated?(m===-1?m=i:i===c&&i!==m&&(i=m-o),c===m&&(i-=o)):d.multiple&&(R=!0,i-=o),i+=o):d.multiple?R&&(i+=o,p-=o,R=!1):E===f?f=void 0:d.optional&&(i+=o,p-=o),p+=o):(s&&!this.isEager()&&u[k](v),E===v&&!this.isEager()?p+=o:f=v,this.isEager()||(i+=o)),this.isEager())for(;g(i)&&(l[r.charAt(i)]==null||h.includes(i));){if(s){if(u[k](r.charAt(i)),t.charAt(p)===r.charAt(i)){i+=o,p+=o;continue}}else r.charAt(i)===t.charAt(p)&&(p+=o);i+=o}}return this.memo.set(n,u.join("")),this.memo.get(n)}}const w=a=>JSON.parse(a.replaceAll("'",'"')),x=(a,t={})=>{const e={...t};a.dataset.maska!=null&&a.dataset.maska!==""&&(e.mask=F(a.dataset.maska)),a.dataset.maskaEager!=null&&(e.eager=b(a.dataset.maskaEager)),a.dataset.maskaReversed!=null&&(e.reversed=b(a.dataset.maskaReversed)),a.dataset.maskaTokensReplace!=null&&(e.tokensReplace=b(a.dataset.maskaTokensReplace)),a.dataset.maskaTokens!=null&&(e.tokens=C(a.dataset.maskaTokens));const s={};return a.dataset.maskaNumberLocale!=null&&(s.locale=a.dataset.maskaNumberLocale),a.dataset.maskaNumberFraction!=null&&(s.fraction=parseInt(a.dataset.maskaNumberFraction)),a.dataset.maskaNumberUnsigned!=null&&(s.unsigned=b(a.dataset.maskaNumberUnsigned)),(a.dataset.maskaNumber!=null||Object.values(s).length>0)&&(e.number=s),e},b=a=>a!==""?!!JSON.parse(a):!0,F=a=>a.startsWith("[")&&a.endsWith("]")?w(a):a,C=a=>{if(a.startsWith("{")&&a.endsWith("}"))return w(a);const t={};return a.split("|").forEach(e=>{const s=e.split(":");t[s[0]]={pattern:new RegExp(s[1]),optional:s[2]==="optional",multiple:s[2]==="multiple",repeated:s[2]==="repeated"}}),t};class S{constructor(t,e={}){A(this,"items",new Map),A(this,"onInput",s=>{if(s instanceof CustomEvent&&s.type==="input"&&!s.isTrusted)return;const n=s.target,r=this.items.get(n),h="inputType"in s&&s.inputType.startsWith("delete"),u=r.isEager(),l=h&&u&&r.unmasked(n.value)===""?"":n.value;this.fixCursor(n,h,()=>this.setValue(n,l))}),this.options=e,this.init(this.getInputs(t))}update(t={}){this.options={...t},this.init(Array.from(this.items.keys()))}updateValue(t){t.value!==""&&t.value!==this.processInput(t).masked&&this.setValue(t,t.value)}destroy(){for(const t of this.items.keys())t.removeEventListener("input",this.onInput);this.items.clear()}init(t){const e=this.getOptions(this.options);for(const s of t){this.items.has(s)||s.addEventListener("input",this.onInput,{capture:!0});const n=new W(x(s,e));this.items.set(s,n),queueMicrotask(()=>this.updateValue(s)),s.selectionStart===null&&n.isEager()&&console.warn("Maska: input of `%s` type is not supported",s.type)}}getInputs(t){return typeof t=="string"?Array.from(document.querySelectorAll(t)):"length"in t?Array.from(t):[t]}getOptions(t){const{onMaska:e,preProcess:s,postProcess:n,...r}=t;return r}fixCursor(t,e,s){const n=t.selectionStart,r=t.value;if(s(),n===null||n===r.length&&!e)return;const h=t.value,u=r.slice(0,n),l=h.slice(0,n),o=this.processInput(t,u).unmasked,k=this.processInput(t,l).unmasked;let c=n;u!==l&&(c+=e?h.length-r.length:o.length-k.length),t.setSelectionRange(c,c)}setValue(t,e){const s=this.processInput(t,e);t.value=s.masked,this.options.onMaska!=null&&(Array.isArray(this.options.onMaska)?this.options.onMaska.forEach(n=>n(s)):this.options.onMaska(s)),t.dispatchEvent(new CustomEvent("maska",{detail:s})),t.dispatchEvent(new CustomEvent("input",{detail:s.masked}))}processInput(t,e){const s=this.items.get(t);let n=e??t.value;this.options.preProcess!=null&&(n=this.options.preProcess(n));let r=s.masked(n);return this.options.postProcess!=null&&(r=this.options.postProcess(r)),{masked:r,unmasked:s.unmasked(n),completed:s.completed(n)}}}export{S as L};
